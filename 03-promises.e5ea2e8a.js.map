{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEvC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC1BC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAdWQ,SAASC,cAAc,SA2C/BC,iBAAiB,UAxBFC,IACvBA,EAAEC,iBACF,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAElC,IAAIC,EAAaC,OAAOL,EAAMM,OAC9B,MAAMC,EAAiBF,OAAOH,EAAOI,OAC/BE,EAAYH,OAAOJ,EAAKK,OAM9B,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAgBE,GAAK,EACxCxB,EAAcwB,EAAGL,GACdM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACnBJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,UAEtD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,UAEpDiB,GAAcI","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formBlock = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    \n}\n\nconst onCreatePromises = e => {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget;\n\n  let firstDelay = Number(delay.value);\n  const promisesAmount = Number(amount.value);\n  const delayStep = Number(step.value);\n\n  // let firstDelay = Number(e.currentTarget.delay.value);\n  // const promisesAmount = Number(e.currentTarget.amount.value);\n  // const delayStep = Number(e.currentTarget.delay.value);\n\n  for (let i = 1; i <= promisesAmount; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    firstDelay += delayStep;\n  }\n};\n\nformBlock.addEventListener('submit', onCreatePromises);"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","firstDelay","Number","value","promisesAmount","delayStep","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.e5ea2e8a.js.map"}